name: Ruby
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          # MYSQL_ROOT_PASSWORD: password
          # MYSQL_DATABASE: myapp
          MYSQL_USER: root
          # MYSQL_PASSWORD: password
          MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
        options: --health-cmd "mysqladmin ping -h localhost" --health-interval 20s --health-timeout 10s --health-retries 10

    # container:
    #   image: ruby:3.0.3
    #   env:
    #     RAILS_ENV: test
        # DATABASE_HOST: mysql

    # steps:
    # - uses: actions/checkout@v2
    # - name: Cache node modules
    #   uses: actions/cache@v2
    #   env:
    #     cache-name: cache-node-modules
    #   with:
    #     path: ~/.npm
    #     key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
    #     restore-keys: |
    #       ${{ runner.os }}-build-${{ env.cache-name }}-
    #       ${{ runner.os }}-build-
    #       ${{ runner.os }}-
    # - name: Cache bundle gems
    #   uses: actions/cache@v2
    #   with:
    #     path: vendor/bundle
    #     key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
    #     restore-keys: |
    #       ${{ runner.os }}-gem-${{ env.cache-name }}-
    #       ${{ runner.os }}-gem-
    #       ${{ runner.os }}-
    # - name: Install Node.js and Yarn
    #   run: |
    #     # https://github.com/nodesource/distributions/blob/master/README.md#installation-instructions
    #     curl -sL https://deb.nodesource.com/setup_12.x | bash -
    #     apt-get install -y nodejs
    #     # https://classic.yarnpkg.com/en/docs/install#debian-stable
    #     curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
    #     echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
    #     apt update && apt install yarn
    # - name: Install Bundler
    #   run: gem install bundler --no-document -v $(grep "BUNDLED WITH" -1 Gemfile.lock | tail -n 1)
    # - name: Bundle install
    #   run: bundle install --path=vendor/bundle --jobs 4 --retry 3
    # - name: Yarn install
    #   run: bundle exec rails yarn:install
    # - name: DB setup
    #   run: bundle exec rails db:setup
    # - name: Run rspec
    #   run: bundle exec rspec












    # - name: Setup docker 
    #   shell: bash
    #   run: |
    #     docker-compose build
    #     docker-compose run api rails db:create

    # - name: Run RSpec
    #   shell: bash
    #   run: |
    #     docker-compose run api bundle exec rspec
    #   env:
    #     RAILS_ENV: test



      # - uses: ruby/setup-ruby@v1
      #   with:
      #     ruby-version: 3.0.3

      # - name: Run bundle install
      #   run: |
      #     bundle config --local path vendor/bundle
      #     bundle config --local without production
      #     bundle install

      # - run: RAILS_ENV=test bundle exec rails assets:precompile

      # - run: bundle exec rails rspec

# - name: Setup docker
#       shell: bash
#       run: |
#         # 必要なアップデート
#         docker-compose run app yarn install --check-files
#         docker-compose run app yarn upgrade
#         # イメージのビルド
#         docker-compose build
#         # データベースの作成
#         docker-compose run app rake db:create
#       env:
#         RAILS_ENV: test

#     - name: Run RSpec
#       shell: bash
#       run:  |
#         docker-compose run app bundle exec rspec
#       env:
#         RAILS_ENV: test
